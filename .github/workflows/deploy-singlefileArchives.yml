name: Deploy Jekyll Site from Private Repo

on:
  push:
    branches:
      - main # 監控 main 分支的變更
  workflow_dispatch: # 支援手動觸發

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 檢出 Public Repository
    - name: Checkout Public Repository
      uses: actions/checkout@v3

    # 2. 檢出 Private Repository (SingleFile-Archives)
    - name: Checkout Private Repository
      uses: actions/checkout@v3
      with:
        repository: Dolphin0317/SingleFile-Archives
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # Private Token
        path: singlefile-repo # 提取到此資料夾

    # 3. 從 Public Repository 複製必要檔案到 _site
    - name: Copy index.html, index.css, and dynamicloud-filelist.js to _site
      run: |
        # 複製 index.html, index.css 和 dynamicloud-filelist.js 到 _site 目錄
        cp index.html *.css *.js _site/

    # 4. 設置 Ruby 環境 (Jekyll 需要)
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
        bundler-cache: true
        
    # 5. 自動生成檔案清單
    - name: Generate File List
      run: |
        # 設定環境變數來確保使用 UTF-8 編碼
        export LANG=en_US.UTF-8
        export LC_ALL=en_US.UTF-8
    
        echo "<ul>" > singlefile-repo/file-list.html
        # 使用 `find` 和 `ls` 組合進行篩選和排序
        for file in $(find singlefile-repo -type f -name "*.html" -printf "%T@ %p\n" | sort -k1,1nr | cut -d' ' -f2-); do
          echo "<li><a href='${file}'>$(basename ${file})</a></li>" >> singlefile-repo/file-list.html
        done
        echo "</ul>" >> singlefile-repo/file-list.html
        
    # 6. 檢查生成的檔案
    #- name: Check Generate File
    #  run: |        
    #    echo "Generated file-list.html content:"
    #    cat singlefile-repo/file-list.html
    #    echo "Files in singlefile-repo directory (sorted by creation date):"
    #    find singlefile-repo -type f -name "*.html" -printf "%T@ %p\n" | sort -k1,1nr

    # 7. 構建 Jekyll 靜態網站
    - name: Build Jekyll Site
      run: |
        bundle install
        bundle exec jekyll build --source singlefile-repo --destination _site

    # 8. 檢查 _site 目錄結構
    - name: Check _site Directory Structure
      run: |
        echo "Listing the _site directory structure:"
        ls -la _site/    

    # 8. 部署到 GitHub Pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_site
        
